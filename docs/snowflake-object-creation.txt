--Creating compute
USE ROLE ACCOUNTADMIN;
--Uncomment below command if you want to drop any of the below things
-- drop role if exists MIGRATE_DATA_ROLE;
--  drop  storage integration if exists MIGRATION_INTEGRATION;
--  drop warehouse  if exists MIGRATION_WAREHOUSE;
--  drop file format  if exists TEST_DATABASE.PUBLIC.SF_GCS_CSV_FORMAT;
--  drop file format  if exists TEST_DATABASE.PUBLIC.SF_GCS_CSV_FORMAT;
--  drop user if exists MIGRATIONUSER;
--  drop SECURITY INTEGRATION if exists MIGRATION_SECURITY_INTEGRATION;
--  drop stage if exists TEST_DATABASE.PUBLIC.gcs_stage_copy_into_DATES_VALUE

--This will help create a special warehouse for the migration use case, users can choose their own configuration
CREATE WAREHOUSE MIGRATION_WAREHOUSE_GCP
  WAREHOUSE_SIZE = 'X-Small'
  WAREHOUSE_TYPE = 'STANDARD'
  AUTO_SUSPEND = 3
  AUTO_RESUME = TRUE
  MIN_CLUSTER_COUNT = 1
  MAX_CLUSTER_COUNT = 2
  SCALING_POLICY = 'STANDARD'
  INITIALLY_SUSPENDED = FALSE;


  -- Creating the integration, this gets used by all the stages which are created by the migrator code.
CREATE STORAGE INTEGRATION MIGRATION_INTEGRATION
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = GCS
ENABLED = TRUE
STORAGE_ALLOWED_LOCATIONS  = ('gcs://{GCS Bucket Name}/');

-- Describe the above created storage integration, it will display the service account which should be given storage permission in GCP project/bucket where the
-- data will be written by Snowflake. Higher level permission could be StorageObjectAdmin and Storage Admin in GCP, but it's recommended to give granular access.
--DESC STORAGE INTEGRATION MIGRATION_INTEGRATION

-- create the file format which will be used in code by stages(TEST_DATABASE.PUBLIC is the database and schema which should be user defined)
CREATE OR REPLACE FILE FORMAT TEST_DATABASE.PUBLIC.SF_GCS_CSV_FORMAT TYPE = CSV;
CREATE OR REPLACE FILE FORMAT TEST_DATABASE.PUBLIC.SF_GCS_PARQUET_FORMAT TYPE = PARQUET;
-- Creating the role to be used
CREATE role MIGRATE_DATA_ROLE;

-- In all the 5-6 commands below, TEST_DATABASE is used for the database, and PUBLIC is used for the schema. Please replace these placeholders with your database and schema.
--This is needed so that role when assigned to user can see and work on database
GRANT USAGE ON DATABASE TEST_DATABASE TO role MIGRATE_DATA_ROLE;
--This is needed to get access to the schema.
GRANT USAGE ON SCHEMA TEST_DATABASE.public TO role MIGRATE_DATA_ROLE;
-- This will give access to all the tables in the schema, otherwise the user will not be able to see tables even from UI.
GRANT SELECT on all tables in database TEST_DATABASE TO ROLE MIGRATE_DATA_ROLE;
--This will help user see the future tables.
GRANT SELECT on FUTURE TABLES IN SCHEMA TEST_DATABASE.public TO ROLE MIGRATE_DATA_ROLE;
--This is needed as we will use the future stages.
GRANT USAGE on FUTURE STAGES IN DATABASE TEST_DATABASE TO ROLE MIGRATE_DATA_ROLE;
--This is needed as we are creating the stages in the database public schema.
GRANT CREATE STAGE ON SCHEMA TEST_DATABASE.public TO ROLE MIGRATE_DATA_ROLE;
-- This is giving usage access on storage integration
GRANT USAGE on INTEGRATION MIGRATION_INTEGRATION to role MIGRATE_DATA_ROLE;
-- This is giving usage access on the file format.
GRANT usage ON file format TEST_DATABASE.PUBLIC.SF_GCS_CSV_FORMAT TO ROLE MIGRATE_DATA_ROLE;
GRANT usage ON file format TEST_DATABASE.PUBLIC.SF_GCS_PARQUET_FORMAT TO ROLE MIGRATE_DATA_ROLE;
-- This is giving usage access on warehouse
GRANT USAGE ON WAREHOUSE MIGRATION_WAREHOUSE_GCP to role MIGRATE_DATA_ROLE;
-- Below command is creating the user with password and setting the default warehouse and role to be used by user.
CREATE USER MIGRATIONUSER PASSWORD='Test@123' DEFAULT_WAREHOUSE='MIGRATION_WAREHOUSE_GCP' DEFAULT_ROLE='MIGRATE_DATA_ROLE';


GRANT ROLE MIGRATE_DATA_ROLE TO USER MIGRATIONUSER;
-- Creating the OAuth related configuration
CREATE OR REPLACE SECURITY INTEGRATION MIGRATION_SECURITY_INTEGRATION
  TYPE = OAUTH
  ENABLED = TRUE
  OAUTH_CLIENT = CUSTOM
  OAUTH_CLIENT_TYPE = <Appropriate Value>
  OAUTH_REDIRECT_URI = 'http://locahost:8080'
  OAUTH_ISSUE_REFRESH_TOKENS = TRUE
  --This is needed because we are using an HTTP URL in OAUTH_REDIRECT_URI, in case of HTTPS URL change OAUTH_REDIRECT_URI=false which is default value.
  OAUTH_ALLOW_NON_TLS_REDIRECT_URI=true
  OAUTH_REFRESH_TOKEN_VALIDITY = 86400;